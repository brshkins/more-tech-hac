services:
  minio:
    image: quay.io/minio/minio:RELEASE.2024-05-28T17-19-04Z
    environment:
      MINIO_ROOT_USER: minio-user
      MINIO_ROOT_PASSWORD: minio-password
      MINIO_UPDATE: off
    entrypoint: >
      /bin/sh -c '
        isAlive() { curl -sf http://127.0.0.1:9000/minio/health/live; }    # check if Minio is alive
        minio $0 "$@" --quiet & echo $! > /tmp/minio.pid                   # start Minio in the background
        while ! isAlive; do sleep 0.1; done                                # wait until Minio is alive
        mc alias set minio http://127.0.0.1:9000 minio-user minio-password # setup Minio client
        mc mb minio/test-bucket || true                                    # create a test bucket
        mc anonymous set public minio/test-bucket                          # make the test bucket public
        kill -s INT $(cat /tmp/minio.pid) && rm /tmp/minio.pid             # stop Minio
        while isAlive; do sleep 0.1; done                                  # wait until Minio is stopped
        exec minio $0 "$@"                                                 # start Minio in the foreground
      '
    command: server /data --json --console-address ':9090'
    ports:
      - "9000:9000/tcp"
      - "9090:9090/tcp" # open http://127.0.0.1:9090 (9000 is the API port)
    volumes:
      - minio-data:/data:rw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/live"]
      interval: 10s
      start_interval: 1s
      start_period: 10s
    security_opt: [no-new-privileges:true]

  server:
    build:
      context: ./server
    ports:
      - "8080:8080"
    restart: always
  redis:
    image: redis:latest
    container_name: my_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
  model:
    build:
      context: ./model
    restart: always
  front:
    build:
      context: ./client
    container_name: frontend-store
    ports:
      - "3000:3000"
    depends_on:
      - server
    restart: always
volumes:
  minio-data: {}
  redis_data:
